<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="Glossary.ttinclude"#>
<#@ output extension=".cs" #>
<#
	var definitions = glossary.Groups.SelectMany(i=> i.Definitions);
#>
using System;
using CodeDocs;

namespace CodeDocs.Tests.AttributeUsage
{
<# foreach(var item in definitions) { #>

	[<#=item.Id#>("")] internal interface I<#=item.Id#>Example{}
	[<#=item.Id#>("")] internal struct <#=item.Id#>StructExample{}
	[<#=item.Id#>("")] internal class <#=item.Id#>Example : I<#=item.Id#>Example
	{
		[<#=item.Id#>("")] internal <#=item.Id#>Example() { Variable1 = "1"; Property1 = "1"; }
		[<#=item.Id#>("")] private enum Enum1 {B};
		[<#=item.Id#>("")] private readonly string Variable1;
		[<#=item.Id#>("")] private string Property1 { get; set; }
		[<#=item.Id#>("")] private Enum1 MethodParam1(Enum1 abc){return abc;}
		[<#=item.Id#>("")] delegate bool Delegate1();
		[<#=item.Id#>("")]event Delegate1 Event1;
	}

<# } #>
}