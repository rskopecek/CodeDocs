<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="Glossary.ttinclude"#>
<#@ output extension="generated.cs" #>
<#
	var definitions = glossary.Groups.SelectMany(i=> i.Definitions);
	var tags = definitions.SelectMany(i=> i.Tags).Distinct();
#>
using System;
using System.Collections.ObjectModel;
using CodeDocs.Definitions;

namespace CodeDocs
{
	/// <summary>
	/// Static glossary of all definitions and tags for easy use and reference
	/// </summary>
	public static partial class Glossary
	{
		static Glossary()
		{
<#foreach(var definition in definitions) { #>
			<#=definition.Id#> = new <#=definition.Id#>Definition();
<# } #>

			Definitions = new ReadOnlyCollection<IDefinition>(new []{ <#=string.Join(", ", definitions.Select(i=> i.Id))#> });
			Risks = new ReadOnlyCollection<Risk>(new []{ <#=string.Join(", ", glossary.Risks.Select(i=> "Risk." + i.Name))#> });
			Efforts = new ReadOnlyCollection<Effort>(new []{ <#=string.Join(", ", glossary.Efforts.Select(i=> "Effort." + i.Name))#> });
			Tags = new ReadOnlyCollection<Tag>(new []{ <#=string.Join(", ", tags.Select(i=> "Tag." + i))#> });
		}

		/// <summary>
		/// Static enumerable definition list for easy use and reference
		/// </summary>
		public static readonly ReadOnlyCollection<IDefinition> Definitions;

		/// <summary>
		/// Static enumerable risk list for easy use and reference
		/// </summary>
		public static readonly ReadOnlyCollection<Risk> Risks;

		/// <summary>
		/// Static enumerable effort list for easy use and reference
		/// </summary>
		public static readonly ReadOnlyCollection<Effort> Efforts;

		/// <summary>
		/// Static enumerable tag list for easy use and reference
		/// </summary>
		public static readonly ReadOnlyCollection<Tag> Tags;



		#region Static ReadOnly Definitions

<#foreach(var definition in definitions) { #>
		/// <summary>
		/// <#=definition.Description#>
		/// </summary>
		public static readonly IDefinition <#=definition.Id#>;
<# } #>

		#endregion
	}
}